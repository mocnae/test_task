@model CreateUserViewModel

<h2>Добавить новый продукт</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.UserName)
        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Role)
            <select asp-for="Role" class="form-control">
                <option value="">Выберите категорию...</option>
                @foreach (var role in ViewBag.Roles)
                {
                    <option value="@role.Name">@role.Name</option>
                }
            </select>
        @Html.ValidationMessageFor(m => m.Role, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>
    <button type="submit" asp-controller="Admin" asp-action="AddUser" class="btn btn-success">Добавить</button>
}
